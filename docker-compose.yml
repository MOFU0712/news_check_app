version: '3.8'

services:
  db:
    image: postgres:15
    container_name: news_system_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: news_system
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - news_system_network

  redis:
    image: redis:7-alpine
    container_name: news_system_redis
    ports:
      - "6379:6379"
    networks:
      - news_system_network

  backend:
    build: ./backend
    container_name: news_system_backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=news_system
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
    networks:
      - news_system_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    container_name: news_system_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - news_system_network
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:

networks:
  news_system_network:
    driver: bridge